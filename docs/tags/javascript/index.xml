<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Javascript on gdlm91</title>
    <link>http://gdlm91.me/tags/javascript/index.xml</link>
    <description>Recent content in Javascript on gdlm91</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es-es</language>
    <atom:link href="http://gdlm91.me/tags/javascript/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>JS - Antes de Iniciar</title>
      <link>http://gdlm91.me/post/js-antes-de-iniciar/</link>
      <pubDate>Wed, 22 Mar 2017 03:00:00 +0000</pubDate>
      
      <guid>http://gdlm91.me/post/js-antes-de-iniciar/</guid>
      <description>

&lt;p&gt;Antes de hablar de JavaScript, quisiera dejar algunos puntos claros:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Esto NO es un tutorial para principiantes ni avanzados.&lt;/li&gt;
&lt;li&gt;NO soy un experto en JavaScript, asi que si ves algo que est√° mal puedes comentarlo y con gusto lo arreglar√©.&lt;/li&gt;
&lt;li&gt;De nuevo, ¬°NO ES UN TUTORIAL!&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;entonces-qu√©-es-esto-que-estoy-leyendo&#34;&gt;¬øEntonces qu√© es esto que estoy leyendo? üò´&lt;/h4&gt;

&lt;p&gt;Es un Cheat Sheet -un poquito extendido- de JavaScript que me sirva para recopilar todo lo que he venido estudiando durante los a√±os que llevo programando, y pueda repasarlo r√°pidamente antes de una entrevista o una clase.&lt;/p&gt;

&lt;p&gt;Si sufres de no poder recordar cada peque√±o detalle de JS, espero esto te ayude un poco.&lt;/p&gt;

&lt;p&gt;Tambi√©n tratar√© de mantener las p√°ginas lo m√°s resumidas posibles. Yo ODIO las publicaciones donde se extienden y le dan vueltas a un mismo tema, as√≠ que lo mantendr√© corto y preciso. Si quieres saber m√°s sobre algo, tratar√© de dejar links para que sacies tu curiosidad.&lt;/p&gt;

&lt;p&gt;Asi que sin m√°s palabreo, dale siguiente para leer de JavaScript.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>JS - Valores y sus Tipos</title>
      <link>http://gdlm91.me/post/js-valores-y-sus-tipos/</link>
      <pubDate>Thu, 23 Mar 2017 03:00:00 +0000</pubDate>
      
      <guid>http://gdlm91.me/post/js-valores-y-sus-tipos/</guid>
      <description>

&lt;p&gt;JS es un lenguaje NO tipado, por lo que -a diferencia de la mayor√≠a de lenguajes- las variables son declaradas sin un tipo definido. Lo que significa que una variable puede tener tu nombre (string), y luego puedes sobrescribir este valor por tu edad (number).&lt;/p&gt;

&lt;p&gt;Los Valores (nombre, edad) son los que llevan consigo una definici√≥n o Tipo.&lt;/p&gt;

&lt;h4 id=&#34;y-de-qu√©-tipo-pueden-ser-los-valores&#34;&gt;¬øY de qu√© tipo pueden ser los valores?&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;string&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;number&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;boolean&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;null&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;undefined&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;object&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;symbol&lt;/strong&gt; (este vino nuevo con ES6)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;c√≥mo-puedo-saber-que-tipo-de-valor-tiene-asignado-una-variable&#34;&gt;¬øC√≥mo puedo saber que tipo de valor tiene asignado una variable?&lt;/h4&gt;

&lt;p&gt;Utilizando el operador &lt;code&gt;typeof&lt;/code&gt; de esta manera:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var x;
typeof x; // &amp;quot;undefined&amp;quot;


x = &amp;quot;Juancho&amp;quot;;
typeof x; // &amp;quot;string&amp;quot;


x = 7;
typeof x; // &amp;quot;number&amp;quot;


x = true;
typeof x; // &amp;quot;boolean&amp;quot;


x = null;
typeof x; // &amp;quot;object&amp;quot; - üòï


x = undefined;
typeof x; // &amp;quot;undefined&amp;quot;


x = { y: &amp;quot;z&amp;quot;};
typeof x; // &amp;quot;object&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;El valor que retorna &lt;code&gt;typeof&lt;/code&gt; SIEMPRE es un string indicando el tipo.&lt;/p&gt;

&lt;p&gt;Tambi√©n se puede notar que el operador no est√° verificando el tipo de variable -ya dijimos que las variables no tienen tipo-, sino el tipo de Valor que tiene en el momento.&lt;/p&gt;

&lt;h4 id=&#34;ok-todo-pero-por-qu√©-null-es-de-tipo-object-no-deber√≠a-ser-tipo-null&#34;&gt;üî• Ok todo pero, ¬øPor qu√© null es de tipo &amp;ldquo;object&amp;rdquo;? ¬øNo deber√≠a ser tipo &amp;ldquo;null&amp;rdquo;?&lt;/h4&gt;

&lt;p&gt;Por lo que he investigado, esto es un Bug de JavaScript que lleva a√±os -creo que desde sus inicios-, pero que no creo que arreglen porque muchas cosas ya depende de este comportamiento extra√±o. Es importante tenerlo en cuenta si por ejemplo:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Detectar si una variable es de tipo &amp;ldquo;object&amp;rdquo;, pero puede ser null en alg√∫n momento&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var bar = {a: &amp;quot;b&amp;quot;};
if(...) {
    bar = null; //alguna condici√≥n hace que sea null
}

console.log(typeof bar === &amp;quot;object&amp;quot;);  // true - oops, no quer√≠amos esto! üò±
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Una posible soluci√≥n ser√≠a algo como:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;console.log((bar !== null) &amp;amp;&amp;amp; (typeof bar === &amp;quot;object&amp;quot;));
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;M√°s adelante veremos por qu√© esta soluci√≥n no es del todo correcta, pero por ahora va bien!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>